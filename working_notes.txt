BUILD PROCESS
(1, 2, 3, 4 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/python_dependency_management/python_dependency_management.md)
1. manage dependencies
    1a. check if you have pip installed (python -m pip --version)
    1b. if not, install it(python -m ensurepip --upgrade)
    1c. a tweak for windows users (https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/python_dependency_management/python_dependency_management.md#32----a-tweak-for-windows-)
2. set up virtual environment
    2a. navigate into repo directory and initialise virtual environment directory (python -m venv venv)
    2b. create requirements.txt file to list the dependencies we plan on using
    2c. create .gitignore file to store venv directory
    2d. activate virtual environment (. venv/Scripts/activate)
3. install requirements (aka django and drf)
    3a. with your venv running, install requirements (python -m pip install -r requirements.txt)
    3b. check install was successful (python -m pip freeze)
4. deactivate virtual environment when finished for the day!! (deactivate)
(5, 6, 7, 8 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/project_setup/project_setup.md)
5. initialise the project (django-admin startproject crowdfunding)
6. create a new app (in this case, the 'projects' app) within the project (python manage.py startapp projects)
7. update installed apps in settings.py
8. migrations set-up (python crowdfunding/manage.py migrate)
9. START BUILDING!
(10 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/models/models.md)
10. create models
    10a. run <python crowdfunding/manage.py makemigrations> and then <python crowdfunding/manage.py migrate> every time we make changes to our models.py file (this is essentially the database!)
    10b. you can test this wby running the django shell <python crowdfunding/manage.py shell>
(11 - https://github.com/orgs/SheCodesAus/projects/4/views/1?pane=issue&itemId=63396719&issue=SheCodesAus%7CPlusLessonContent%7C77)
11. plan endpoints (urls!)
(12 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/serializers/serializers.md)
12. create serializers.py file inside inner projects directory
    12a. make sure you import the serializer framework from DRF 
(13 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/views/views.md)
13. create views!
    13a. create a urls.py file inside the relevent app directory to handle views urls for that particular app
    13b. make sure you import the urls framework from django!
    13c. create HTTP requests in the view (GET, POST, etc)
(14 - https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/model_relations/model_relations.md)
14. set up Pledge model!  
    14a. create relationships between projects and pledges using foreign keys
    14b. don't forget to save the database changes with makemigrations and migrate
    14c. add pledge serializer SheCodesAus
    14d. create a view for pledges
    14e. add a url for the pledge endpoint
    14f. make sure to include the pledge info in our project details with a new projectDetailSerializer
    14g. include these serializer details in our project detail view
15. users in django/DRF (https://github.com/SheCodesAus/PlusLessonContent/blob/main/3_Django_and_DRF/users/users.md)
    15a. make sure you're inside the working repo directory (make sure it contains the <manage.py> file)
    15b. run <python manage.py startapp users> to create the new 'users' app
    15c. register the new users app in the settings file


SUPERUSER Details:
username: domspenc
email: domloves@dogs.com
pw: WoofWoof33

DogUser1 Details:
username: doggo1
email: doggo1@beanefactor.com
pw: DoggoOne1


RUN THE SERVER
python crowdfunding/manage.py runserver
http://127.0.0.1:8000/

ENDPOINTS

DogUsers
POST /users/signup – Create a new user.
POST /users/login – Log in a user.
POST /users/logout – Log out a user.
GET /users/{id} – Retrieve user profile.
PUT or PATCH /users/{id} – Update user profile.

Projects
GET /projects – List all projects.
GET /projects/{id} – Retrieve a specific project.
POST /projects – Create a new project.
PUT or PATCH /projects/{id} – Update an existing project.
DELETE /projects/{id} – Delete a project.

TreatPledges
POST /projects/{id}/treats – Pledge (sacrifice) treats to a project.
GET /projects/{id}/treats – View total treats pledged. ***this can be added to project details to not have too many endpoints

Comments
GET /projects/{id}/comments – List all comments for a project.
POST /projects/{id}/comments – Add a new comment to a project.
PUT or PATCH /comments/{id} – Update a specific comment.
DELETE /comments/{id} – Delete a specific comment.

Categories
GET /categories – List all project categories.
GET /categories/{id}/projects – List all projects in a specific category.

# CATEGORIES with descriptions
Healthcare
Description: Projects focused on improving dog health, well-being, and medical care. This could include veterinary support, health campaigns, or medical research.

Adoption
Description: Initiatives aimed at finding loving homes for dogs, including rescue efforts, adoption programs, and fostering campaigns.

Training
Description: Projects related to dog training, behavioral improvement, and skill development, such as obedience training, agility courses, or service dog training.

Nutrition
Description: Initiatives focused on improving dog nutrition through food donations, education on diet, and promoting healthy eating habits for dogs.

Toys
Description: Projects dedicated to providing dogs with enriching toys and activities to improve their mental and physical stimulation.

Rescue
Description: Efforts aimed at rescuing dogs from abusive environments, shelters, or natural disasters, and providing them with a chance at a new life.

Sustainability
Description: Projects that promote eco-friendly initiatives for dogs, such as sustainable pet products, reducing waste, or advocating for green spaces for dogs.

Technology
Description: Innovative projects involving technology for dogs, such as wearable health trackers, pet monitoring systems, or dog-friendly apps.

Socialisation
Description: Initiatives designed to improve the social lives of dogs through community events, dog parks, or group activities aimed at enhancing dog behavior in social settings.

Comfort
Description: Projects focused on providing dogs with comfort, including creating comfortable living spaces, bedding, and stress-reducing environments.